#include <cstdint>
#include "bst.hpp"

struct DstEntry {
    int year;
    uint32_t start;  // Seconds at start of BST
    uint32_t end;    // Seconds at end of BST
};

// In the UK the clocks go forward 1 hour at 1am on the last Sunday in March, and back 1 hour at 2am on the last Sunday in October.
// The period when the clocks are 1 hour ahead is called British Summer Time (BST). Thereâ€™s more daylight in the evenings and less in the mornings (sometimes called Daylight Saving Time).
// When the clocks go back, the UK is on Greenwich Mean Time (GMT).

static DstEntry bstLookup[] = {

{2024,1711846800,1729990800},
{2025,1743296400,1761440400},
{2026,1774746000,1792890000},
{2027,1806195600,1824944400},
{2028,1837645200,1856394000},
{2029,1869094800,1887843600},
{2030,1901149200,1919293200},
{2031,1932598800,1950742800},
{2032,1964048400,1982797200},
{2033,1995498000,2014246800},
{2034,2026947600,2045696400},
{2035,2058397200,2077146000},
{2036,2090451600,2108595600},
{2037,2121901200,2140045200},
{2038,2153350800,2172099600},
{2039,2184800400,2203549200},
{2040,2216250000,2234998800},
{2041,2248304400,2266448400},
{2042,2279754000,2297898000},
{2043,2311203600,2329347600},
{2044,2342653200,2361402000},
{2045,2374102800,2392851600},
{2046,2405552400,2424301200},
{2047,2437606800,2455750800},
{2048,2469056400,2487200400},
{2049,2500506000,2519254800},
{2050,2531955600,2550704400},
{2051,2563405200,2582154000},
{2052,2595459600,2613603600},
{2053,2626909200,2645053200},
{2054,2658358800,2676502800},
{2055,2689808400,2708557200},
{2056,2721258000,2740006800},
{2057,2752707600,2771456400},
{2058,2784762000,2802906000},
{2059,2816211600,2834355600},
{2060,2847661200,2866410000},
{2061,2879110800,2897859600},
{2062,2910560400,2929309200},
{2063,2942010000,2960758800},
{2064,2974064400,2992208400},
{2065,3005514000,3023658000},
{2066,3036963600,3055712400},
{2067,3068413200,3087162000},
{2068,3099862800,3118611600},
{2069,3131917200,3150061200},
{2070,3163366800,3181510800},
{2071,3194816400,3212960400},
{2072,3226266000,3245014800},
{2073,3257715600,3276464400},
{2074,3289165200,3307914000},
{2075,3321219600,3339363600},
{2076,3352669200,3370813200},
{2077,3384118800,3402867600},
{2078,3415568400,3434317200},
{2079,3447018000,3465766800},
{2080,3479072400,3497216400},
{2081,3510522000,3528666000},
{2082,3541971600,3560115600},
{2083,3573421200,3592170000},
{2084,3604870800,3623619600},
{2085,3636320400,3655069200},
{2086,3668374800,3686518800},
{2087,3699824400,3717968400},
{2088,3731274000,3750022800},
{2089,3762723600,3781472400},
{2090,3794173200,3812922000},
{2091,3825622800,3844371600},
{2092,3857677200,3875821200},
{2093,3889126800,3907270800},
{2094,3920576400,3939325200},
{2095,3952026000,3970774800},
{2096,3983475600,4002224400},
{2097,4015530000,4033674000},
{2098,4046979600,4065123600},
{2099,4078429200,4096573200},
{2100,4109878800,4128627600},
{2101,4141328400,4160077200},
{2102,4172778000,4191526800},
{2103,4204227600,4222976400},
{2104,4236282000,4254426000},
{2105,4267731600,4285875600},
// after this point 32 bits isn't enough 
};

int BST::offset(time_t t){
    struct tm *utc = gmtime(&t);

    int idx = (utc->tm_year + 1900) - bstLookup[0].year;   // Get index of this year.  (tm_year	int	years since 1900)
    if(idx < 0 || idx >= sizeof(bstLookup) / sizeof(bstLookup[0])) return 0;  // Shouldn't happen in my lifetime....

    return ( (t >= bstLookup[idx].start) && (t < bstLookup[idx].end)) ? 3600 : 0; // add an hour if BST otherwise 0.
}
